{"version":3,"sources":["components/countries.js","components/styled-components.js","components/Loading.js","components/Counter.js","redux/actions/data.js","redux/actions/actionTypes.js","components/TotalCounter.js","components/TimeGraph.js","components/PieChart.js","components/MapChart.js","components/CountryInfo.js","components/Footer.js","components/LastUpdated.js","components/App.js","serviceWorker.js","redux/reducers/data.js","redux/reducers/index.js","redux/index.js","index.js"],"names":["Container","styled","div","_templateObject","countries","nav","_templateObject2","countriesFull","isoDictionary","i","length","allCountries","name","iso2","iso3","isoDictionaryAll","temp","countryData","json","ret","key","swap","Loading","react_default","a","createElement","className","index_es","icon","faSpinner","spin","size","Counter","state","data","loading","prevProps","this","props","setState","confirmedRows","Fragment","deadRows","recoveredRows","confirmedData","deathsData","recoveredData","map","country","style","color","fontSize","confirmed","deaths","recovered","console","log","components_Loading","Tabs","defaultActiveKey","id","Tab","eventKey","title","class","Component","connect","dispatch","setData","type","payload","TotalCounter","TimeGraph","selector","logarithmic","capitalizeFirstLetter","string","charAt","toUpperCase","slice","setupTicks","arr","delta","date","l","Math","floor","newArr","push","_this","formatDate","handleOnClick","selected","handleSwitch","_this2","buttons","padding","onClick","plotDataY","plotDataX","iso","countryObj","confirmedArr","deathsArr","recoveredArr","timeArr","counter","dateArr","scatterData","select","trace","x","y","logType","colorway","colormap","nshades","format","alpha","for","react_plotly_default","layout","modebar","bgcolor","concat","font","xaxis","nticks","yaxis","plot_bgcolor","paper_bgcolor","autosize","height","hovermode","margin","r","t","b","pad","legend","xanchor","yanchor","orientation","config","modeBarButtonsToRemove","displaylogo","useResizeHandler","width","PieChart","confirmedX","confirmedY","deathsX","deathsY","recoveredX","recoveredY","values","labels","textinfo","rotation","showlegend","reverse","reverseDict","setCountry","confirmedList","countryNames","scaledData","num","region","pow","mode","locations","hoverinfo","text","marker","sizeref","line","geo","scope","resolution","showland","landcolor","showframe","showcountries","showocean","oceancolor","border","lonaxis","range","lataxis","pointData","index","points","pointIndex","location","handleClick","dictionary","instance","axios","create","baseURL","_ref","global","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","setLoading","_useState5","_useState6","X","setX","_useState7","_useState8","Y1","setY1","_useState9","_useState10","Y2","setY2","_useState11","_useState12","Y3","setY3","_useState13","_useState14","Y4","setY4","_useState15","_useState16","setLogarithmic","_useState17","_useState18","setSelector","fetchData","_ref2","asyncToGenerator","regenerator_default","mark","_callee","response","_countryData","wrap","_context","prev","next","get","sent","result","t0","error","stop","_x","apply","arguments","useEffect","Xtemp","Y1temp","Y2temp","Y3temp","Y4temp","plotData","Footer","textAlign","paddingTop","href","LastUpdated","setDate","fetchDate","fetchedData","opacity","paddingLeft","MENA","App","dataCountries","response1","data1","dict","response2","data2","timeData","componentDidMount","_callee2","_context2","sortCountries","items","cleanedConfirmed","cleanedRecovered","cleanedDeaths","countryName","keys","indexOf","confirmedObj","recoveredObj","deathsObj","sort","sortedData","sortedDataMENA","confirmedDataMENA","deathsDataMENA","recoveredDataMENA","totalConfirmedMENA","totalDeathsMENA","totalRecoveredMENA","totalConfirmed","totalDeaths","totalRecovered","components_TotalCounter","components_Counter","components_TimeGraph","components_PieChart","components_MapChart","components_CountryInfo","components_LastUpdated","components_Footer","Boolean","window","hostname","match","initialState","reducer","undefined","action","objectSpread","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","react_router_dom","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa06f7af.chunk.js","sourcesContent":["const countries = [\n  \"DZA\",\n  \"KWT\",\n  \"BHR\",\n  \"EGY\",\n  \"IRQ\",\n  \"JOR\",\n  \"LBN\",\n  \"LBY\",\n  \"MAR\",\n  \"OMN\",\n  \"QAT\",\n  \"SAU\",\n  \"SYR\",\n  \"TUN\",\n  \"ARE\",\n  \"SDN\",\n];\n\nconst countriesFull = [\n  \"Algeria\",\n  \"Kuwait\",\n  \"Bahrain\",\n  \"Egypt\",\n  \"Iraq\",\n  \"Jordan\",\n  \"Lebanon\",\n  \"Libya\",\n  \"Morocco\",\n  \"Oman\",\n  \"Qatar\",\n  \"Saudi Arabia\",\n  \"Syria\",\n  \"Tunisia\",\n  \"UAE\",\n  \"Sudan\",\n];\n\nconst isoDictionary = {};\nfor (let i = 0; i < countries.length; i++) {\n  isoDictionary[countries[i]] = countriesFull[i];\n}\n\nconst allCountries = [\n  { name: \"Afghanistan\", iso2: \"AF\", iso3: \"AFG\" },\n  { name: \"Albania\", iso2: \"AL\", iso3: \"ALB\" },\n  { name: \"Algeria\", iso2: \"DZ\", iso3: \"DZA\" },\n  { name: \"Andorra\", iso2: \"AD\", iso3: \"AND\" },\n  { name: \"Angola\", iso2: \"AO\", iso3: \"AGO\" },\n  { name: \"Antigua and Barbuda\", iso2: \"AG\", iso3: \"ATG\" },\n  { name: \"Argentina\", iso2: \"AR\", iso3: \"ARG\" },\n  { name: \"Armenia\", iso2: \"AM\", iso3: \"ARM\" },\n  { name: \"Australia\", iso2: \"AU\", iso3: \"AUS\" },\n  { name: \"Austria\", iso2: \"AT\", iso3: \"AUT\" },\n  { name: \"Azerbaijan\", iso2: \"AZ\", iso3: \"AZE\" },\n  { name: \"Bahamas\", iso2: \"BS\", iso3: \"BHS\" },\n  { name: \"Bahrain\", iso2: \"BH\", iso3: \"BHR\" },\n  { name: \"Bangladesh\", iso2: \"BD\", iso3: \"BGD\" },\n  { name: \"Barbados\", iso2: \"BB\", iso3: \"BRB\" },\n  { name: \"Belarus\", iso2: \"BY\", iso3: \"BLR\" },\n  { name: \"Belgium\", iso2: \"BE\", iso3: \"BEL\" },\n  { name: \"Belize\", iso2: \"BZ\", iso3: \"BLZ\" },\n  { name: \"Benin\", iso2: \"BJ\", iso3: \"BEN\" },\n  { name: \"Bhutan\", iso2: \"BT\", iso3: \"BTN\" },\n  { name: \"Bolivia\", iso2: \"BO\", iso3: \"BOL\" },\n  { name: \"Bosnia and Herzegovina\", iso2: \"BA\", iso3: \"BIH\" },\n  { name: \"Botswana\", iso2: \"BW\", iso3: \"BWA\" },\n  { name: \"Brazil\", iso2: \"BR\", iso3: \"BRA\" },\n  { name: \"Brunei\", iso2: \"BN\", iso3: \"BRN\" },\n  { name: \"Bulgaria\", iso2: \"BG\", iso3: \"BGR\" },\n  { name: \"Burkina Faso\", iso2: \"BF\", iso3: \"BFA\" },\n  { name: \"Burma\" },\n  { name: \"Burundi\", iso2: \"BI\", iso3: \"BDI\" },\n  { name: \"Cabo Verde\" },\n  { name: \"Kosovo\", iso2: \"RK\", iso3: \"RKS\" },\n  { name: \"Cambodia\", iso2: \"KH\", iso3: \"KHM\" },\n  { name: \"Cameroon\", iso2: \"CM\", iso3: \"CMR\" },\n  { name: \"Canada\", iso2: \"CA\", iso3: \"CAN\" },\n  { name: \"Central African Republic\", iso2: \"CF\", iso3: \"CAF\" },\n  { name: \"Chad\", iso2: \"TD\", iso3: \"TCD\" },\n  { name: \"Chile\", iso2: \"CL\", iso3: \"CHL\" },\n  { name: \"China\", iso2: \"CN\", iso3: \"CHN\" },\n  { name: \"Colombia\", iso2: \"CO\", iso3: \"COL\" },\n  { name: \"Congo (Brazzaville)\" },\n  { name: \"Congo (Kinshasa)\" },\n  { name: \"D. R. Congo\", iso2: \"CD\", iso3: \"COD\" },\n  { name: \"Costa Rica\", iso2: \"CR\", iso3: \"CRI\" },\n  { name: \"Cote d'Ivoire\" },\n  { name: \"Croatia\", iso2: \"HR\", iso3: \"HRV\" },\n  { name: \"Cuba\", iso2: \"CU\", iso3: \"CUB\" },\n  { name: \"Cyprus\", iso2: \"CY\", iso3: \"CYP\" },\n  { name: \"Czechia\", iso2: \"CZ\", iso3: \"CZE\" },\n  { name: \"Denmark\", iso2: \"DK\", iso3: \"DNK\" },\n  { name: \"Diamond Princess\" },\n  { name: \"Djibouti\", iso2: \"DJ\", iso3: \"DJI\" },\n  { name: \"Dominica\", iso2: \"DM\", iso3: \"DMA\" },\n  { name: \"Dominican Republic\", iso2: \"DO\", iso3: \"DOM\" },\n  { name: \"Ecuador\", iso2: \"EC\", iso3: \"ECU\" },\n  { name: \"Egypt\", iso2: \"EG\", iso3: \"EGY\" },\n  { name: \"El Salvador\", iso2: \"SV\", iso3: \"SLV\" },\n  { name: \"Equatorial Guinea\", iso2: \"GQ\", iso3: \"GNQ\" },\n  { name: \"Eritrea\", iso2: \"ER\", iso3: \"ERI\" },\n  { name: \"Estonia\", iso2: \"EE\", iso3: \"EST\" },\n  { name: \"Eswatini\" },\n  { name: \"Ethiopia\", iso2: \"ET\", iso3: \"ETH\" },\n  { name: \"Fiji\", iso2: \"FJ\", iso3: \"FJI\" },\n  { name: \"Finland\", iso2: \"FI\", iso3: \"FIN\" },\n  { name: \"France\", iso2: \"FR\", iso3: \"FRA\" },\n  { name: \"Gabon\", iso2: \"GA\", iso3: \"GAB\" },\n  { name: \"Gambia\", iso2: \"GM\", iso3: \"GMB\" },\n  { name: \"Georgia\", iso2: \"GE\", iso3: \"GEO\" },\n  { name: \"Germany\", iso2: \"DE\", iso3: \"DEU\" },\n  { name: \"Ghana\", iso2: \"GH\", iso3: \"GHA\" },\n  { name: \"Greece\", iso2: \"GR\", iso3: \"GRC\" },\n  { name: \"Grenada\", iso2: \"GD\", iso3: \"GRD\" },\n  { name: \"Guatemala\", iso2: \"GT\", iso3: \"GTM\" },\n  { name: \"Guinea\", iso2: \"GN\", iso3: \"GIN\" },\n  { name: \"Guinea-Bissau\", iso2: \"GW\", iso3: \"GNB\" },\n  { name: \"Guyana\", iso2: \"GY\", iso3: \"GUY\" },\n  { name: \"Haiti\", iso2: \"HT\", iso3: \"HTI\" },\n  { name: \"Holy See\" },\n  { name: \"Myanmar (Burma)\", iso2: \"MM\", iso3: \"MMR\" },\n  { name: \"Honduras\", iso2: \"HN\", iso3: \"HND\" },\n  { name: \"Hungary\", iso2: \"HU\", iso3: \"HUN\" },\n  { name: \"Iceland\", iso2: \"IS\", iso3: \"ISL\" },\n  { name: \"India\", iso2: \"IN\", iso3: \"IND\" },\n  { name: \"Indonesia\", iso2: \"ID\", iso3: \"IDN\" },\n  { name: \"Iran\", iso2: \"IR\", iso3: \"IRN\" },\n  { name: \"Iraq\", iso2: \"IQ\", iso3: \"IRQ\" },\n  { name: \"Ireland\", iso2: \"IE\", iso3: \"IRL\" },\n  { name: \"Israel\", iso2: \"IL\", iso3: \"ISR\" },\n  { name: \"Italy\", iso2: \"IT\", iso3: \"ITA\" },\n  { name: \"Jamaica\", iso2: \"JM\", iso3: \"JAM\" },\n  { name: \"Japan\", iso2: \"JP\", iso3: \"JPN\" },\n  { name: \"Jordan\", iso2: \"JO\", iso3: \"JOR\" },\n  { name: \"Kazakhstan\", iso2: \"KZ\", iso3: \"KAZ\" },\n  { name: \"Kenya\", iso2: \"KE\", iso3: \"KEN\" },\n  { name: \"Korea, South\", iso2: \"KR\", iso3: \"KOR\" },\n  { name: \"Kosovo\", iso2: \"XK\", iso3: \"XKX\" },\n  { name: \"Kuwait\", iso2: \"KW\", iso3: \"KWT\" },\n  { name: \"Kyrgyzstan\", iso2: \"KG\", iso3: \"KGZ\" },\n  { name: \"Laos\", iso2: \"LA\", iso3: \"LAO\" },\n  { name: \"Latvia\", iso2: \"LV\", iso3: \"LVA\" },\n  { name: \"Lebanon\", iso2: \"LB\", iso3: \"LBN\" },\n  { name: \"Liberia\", iso2: \"LR\", iso3: \"LBR\" },\n  { name: \"Libya\", iso2: \"LY\", iso3: \"LBY\" },\n  { name: \"Liechtenstein\", iso2: \"LI\", iso3: \"LIE\" },\n  { name: \"Lithuania\", iso2: \"LT\", iso3: \"LTU\" },\n  { name: \"Luxembourg\", iso2: \"LU\", iso3: \"LUX\" },\n  { name: \"MS Zaandam\" },\n  { name: \"Madagascar\", iso2: \"MG\", iso3: \"MDG\" },\n  { name: \"Malaysia\", iso2: \"MY\", iso3: \"MYS\" },\n  { name: \"Maldives\", iso2: \"MV\", iso3: \"MDV\" },\n  { name: \"Mali\", iso2: \"ML\", iso3: \"MLI\" },\n  { name: \"Malawi\", iso2: \"MW\", iso3: \"MWI\" },\n  { name: \"Malta\", iso2: \"MT\", iso3: \"MLT\" },\n  { name: \"Côte d'Ivoire\", iso2: \"CV\", iso3: \"CIV\" },\n  { name: \"Mauritania\", iso2: \"MR\", iso3: \"MRT\" },\n  { name: \"Mauritius\", iso2: \"MU\", iso3: \"MUS\" },\n  { name: \"Mexico\", iso2: \"MX\", iso3: \"MEX\" },\n  { name: \"Moldova\", iso2: \"MD\", iso3: \"MDA\" },\n  { name: \"Monaco\", iso2: \"MC\", iso3: \"MCO\" },\n  { name: \"Mongolia\", iso2: \"MN\", iso3: \"MNG\" },\n  { name: \"Montenegro\", iso2: \"ME\", iso3: \"MNE\" },\n  { name: \"Morocco\", iso2: \"MA\", iso3: \"MAR\" },\n  { name: \"Mozambique\", iso2: \"MZ\", iso3: \"MOZ\" },\n  { name: \"Namibia\", iso2: \"NA\", iso3: \"NAM\" },\n  { name: \"Nepal\", iso2: \"NP\", iso3: \"NPL\" },\n  { name: \"Netherlands\", iso2: \"NL\", iso3: \"NLD\" },\n  { name: \"New Zealand\", iso2: \"NZ\", iso3: \"NZL\" },\n  { name: \"Nicaragua\", iso2: \"NI\", iso3: \"NIC\" },\n  { name: \"Niger\", iso2: \"NE\", iso3: \"NER\" },\n  { name: \"Nigeria\", iso2: \"NG\", iso3: \"NGA\" },\n  { name: \"North Macedonia\" },\n  { name: \"Eswatini\", iso2: \"SWZ\", iso3: \"SWZ\" },\n  { name: \"Norway\", iso2: \"NO\", iso3: \"NOR\" },\n  { name: \"Oman\", iso2: \"OM\", iso3: \"OMN\" },\n  { name: \"Pakistan\", iso2: \"PK\", iso3: \"PAK\" },\n  { name: \"Panama\", iso2: \"PA\", iso3: \"PAN\" },\n  { name: \"Papua New Guinea\", iso2: \"PG\", iso3: \"PNG\" },\n  { name: \"Paraguay\", iso2: \"PY\", iso3: \"PRY\" },\n  { name: \"Peru\", iso2: \"PE\", iso3: \"PER\" },\n  { name: \"Philippines\", iso2: \"PH\", iso3: \"PHL\" },\n  { name: \"Poland\", iso2: \"PL\", iso3: \"POL\" },\n  { name: \"Portugal\", iso2: \"PT\", iso3: \"PRT\" },\n  { name: \"Qatar\", iso2: \"QA\", iso3: \"QAT\" },\n  { name: \"Romania\", iso2: \"RO\", iso3: \"ROU\" },\n  { name: \"Russia\", iso2: \"RU\", iso3: \"RUS\" },\n  { name: \"Rwanda\", iso2: \"RW\", iso3: \"RWA\" },\n  { name: \"Saint Kitts and Nevis\", iso2: \"KN\", iso3: \"KNA\" },\n  { name: \"Saint Lucia\", iso2: \"LC\", iso3: \"LCA\" },\n  { name: \"Saint Vincent\", iso2: \"VC\", iso3: \"VCT\" },\n  { name: \"San Marino\", iso2: \"SM\", iso3: \"SMR\" },\n  { name: \"Saudi Arabia\", iso2: \"SA\", iso3: \"SAU\" },\n  { name: \"West Bank/Gaza\", iso2: \"WB\", iso3: \"WBG\" },\n  { name: \"Senegal\", iso2: \"SN\", iso3: \"SEN\" },\n  { name: \"Serbia\", iso2: \"RS\", iso3: \"SRB\" },\n  { name: \"Seychelles\", iso2: \"SC\", iso3: \"SYC\" },\n  { name: \"Republic of Congo\", iso2: \"CG\", iso3: \"COG\" },\n  { name: \"Sierra Leone\", iso2: \"SL\", iso3: \"SLE\" },\n  { name: \"Singapore\", iso2: \"SG\", iso3: \"SGP\" },\n  { name: \"Slovakia\", iso2: \"SK\", iso3: \"SVK\" },\n  { name: \"Slovenia\", iso2: \"SI\", iso3: \"SVN\" },\n  { name: \"Somalia\", iso2: \"SO\", iso3: \"SOM\" },\n  { name: \"Vatican\", iso2: \"VA\", iso3: \"VAT\" },\n  { name: \"Cape Verde\", iso2: \"CPV\", iso3: \"CPV\" },\n  { name: \"Port of Namibe\", iso2: \"MSZ\", iso3: \"MSZ\" },\n  { name: \"North Macedonia\", iso2: \"MKD\", iso3: \"MKD\" },\n  { name: \"Bali\", iso2: \"DPS\", iso3: \"DPS\" },\n  { name: \"South Africa\", iso2: \"ZA\", iso3: \"ZAF\" },\n  { name: \"Spain\", iso2: \"ES\", iso3: \"ESP\" },\n  { name: \"Sri Lanka\", iso2: \"LK\", iso3: \"LKA\" },\n  { name: \"Sudan\", iso2: \"SD\", iso3: \"SDN\" },\n  { name: \"Suriname\", iso2: \"SR\", iso3: \"SUR\" },\n  { name: \"Sweden\", iso2: \"SE\", iso3: \"SWE\" },\n  { name: \"Switzerland\", iso2: \"CH\", iso3: \"CHE\" },\n  { name: \"Syria\", iso2: \"SY\", iso3: \"SYR\" },\n  { name: \"Taiwan*\", iso2: \"TW\", iso3: \"TWN\" },\n  { name: \"Tanzania\", iso2: \"TZ\", iso3: \"TZA\" },\n  { name: \"Thailand\", iso2: \"TH\", iso3: \"THA\" },\n  { name: \"Timor-Leste\", iso2: \"TL\", iso3: \"TLS\" },\n  { name: \"Togo\", iso2: \"TG\", iso3: \"TGO\" },\n  { name: \"Trinidad and Tobago\", iso2: \"TT\", iso3: \"TTO\" },\n  { name: \"Tunisia\", iso2: \"TN\", iso3: \"TUN\" },\n  { name: \"Turkey\", iso2: \"TR\", iso3: \"TUR\" },\n  { name: \"US\", iso2: \"US\", iso3: \"USA\" },\n  { name: \"Uganda\", iso2: \"UG\", iso3: \"UGA\" },\n  { name: \"Ukraine\", iso2: \"UA\", iso3: \"UKR\" },\n  { name: \"UAE\", iso2: \"AE\", iso3: \"ARE\" },\n  { name: \"United Kingdom\", iso2: \"GB\", iso3: \"GBR\" },\n  { name: \"Uruguay\", iso2: \"UY\", iso3: \"URY\" },\n  { name: \"Uzbekistan\", iso2: \"UZ\", iso3: \"UZB\" },\n  { name: \"Venezuela\", iso2: \"VE\", iso3: \"VEN\" },\n  { name: \"Vietnam\", iso2: \"VN\", iso3: \"VNM\" },\n  { name: \"West Bank and Gaza\" },\n  { name: \"Zambia\", iso2: \"ZM\", iso3: \"ZMB\" },\n  { name: \"Zimbabwe\", iso2: \"ZW\", iso3: \"ZWE\" },\n];\n\nlet isoDictionaryAll = {};\nfor (let i = 0; i < allCountries.length; i++) {\n  let temp = allCountries[i];\n  isoDictionaryAll[temp[\"iso3\"]] = temp[\"name\"];\n}\n\nconst swap = (json) => {\n  var ret = {};\n  for (var key in json) {\n    ret[json[key]] = key;\n  }\n  return ret;\n};\n\nlet isoDictionaryAllReversed = swap(isoDictionaryAll);\n\nconst countryData = [\n  countries,\n  countriesFull,\n  isoDictionary,\n  allCountries,\n  isoDictionaryAll,\n  isoDictionaryAllReversed,\n];\n\nexport default countryData;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div``;\n\nexport const Nav = styled.nav``;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Loading = () => (\n  <div className=\"spinner mx-auto text-center\">\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <FontAwesomeIcon icon={faSpinner} spin size=\"5x\" />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n  </div>\n);\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport countryData from \"./countries\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Loading from \"./Loading\";\nimport { connect } from \"react-redux\";\nimport { setData } from \"../redux/actions\";\n\nclass Counter extends Component {\n  state = {\n    data: null,\n    loading: true,\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.loading !== this.props.loading) {\n      this.setState({ loading: !this.props.loading });\n    }\n  }\n\n  render() {\n    let confirmedRows = <></>;\n    let deadRows = <></>;\n    let recoveredRows = <></>;\n\n    const confirmedData = this.props.data[0];\n    const deathsData = this.props.data[1];\n    const recoveredData = this.props.data[2];\n\n    confirmedRows = confirmedData.map((country) => (\n      <tr>\n        <td>\n          &nbsp;&nbsp;&nbsp;\n          <font style={{ color: \"red\", fontSize: \"18px\" }}>\n            {country.confirmed}\n          </font>\n          <font style={{ fontSize: \"16px\", color: \"#99aab5\" }}>\n            &nbsp;&nbsp;\n            {country.name}\n          </font>\n        </td>\n      </tr>\n    ));\n    deadRows = deathsData.map((country) => (\n      <tr>\n        <td>\n          &nbsp;&nbsp;&nbsp;\n          <font style={{ color: \"red\", fontSize: \"18px\" }}>\n            {country.deaths}\n          </font>\n          <font style={{ fontSize: \"16px\", color: \"#99aab5\" }}>\n            &nbsp;&nbsp;\n            {country.name}\n          </font>\n        </td>\n      </tr>\n    ));\n    recoveredRows = recoveredData.map((country) => (\n      <tr>\n        <td>\n          &nbsp;&nbsp;&nbsp;\n          <font style={{ color: \"red\", fontSize: \"18px\" }}>\n            {country.recovered}\n          </font>\n          <font style={{ fontSize: \"16px\", color: \"#99aab5\" }}>\n            &nbsp;&nbsp;\n            {country.name}\n          </font>\n        </td>\n      </tr>\n    ));\n\n    recoveredData.map((country) => console.log(country));\n\n    if (this.props.loading) {\n      return <Loading />;\n    }\n    return (\n      <div className=\"counter-nav\">\n        <Tabs defaultActiveKey=\"confirmed\" id=\"counter\">\n          <Tab eventKey=\"confirmed\" title=\"Confirmed\">\n            <div className=\"card mx-auto counter list my-custom-scrollbar\">\n              <table class=\"table-dark table-bordered \">\n                <tbody>{this.props.loading ? \"\" : confirmedRows}</tbody>\n              </table>\n            </div>\n          </Tab>\n          <Tab eventKey=\"deaths\" title=\"Deaths\">\n            <div className=\"card mx-auto counter list my-custom-scrollbar\">\n              <table class=\"table-dark table-bordered \">\n                <tbody> {this.props.loading ? \"\" : deadRows}</tbody>\n              </table>\n            </div>\n          </Tab>\n          <Tab eventKey=\"recovered\" title=\"Recovered\">\n            <div className=\"card mx-auto counter list my-custom-scrollbar\">\n              <table class=\"table-dark table-bordered\">\n                <tbody> {this.props.loading ? \"\" : recoveredRows}</tbody>\n              </table>\n            </div>\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setData: (data) => dispatch(setData(data)),\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Counter);\n","import { SET_COUNTRY, SET_DATA, LOADING } from \"./actionTypes\";\nimport axios from \"axios\";\n\n// const instance = axios.create({\n//   baseURL: \"https://covid19.mathdro.id/api/countries/\",\n// });\n\n// export const fetchCountryData = (country) => async (dispatch) => {\n//   try {\n//     const res = await instance.get(`${country}`);\n//     const countryData = res.data;\n//     dispatch({ type: SET_COUNTRY, payload: countryData });\n//   } catch (err) {\n//     console.error(err);\n//   }\n// };\n\nexport const setData = (data) => {\n  return { type: SET_DATA, payload: data };\n};\n\nexport const loading = (condition) => {\n  return { type: LOADING, payload: condition };\n};\n\nexport const setCountry = (country) => {\n  return { type: SET_COUNTRY, payload: country };\n};\n","export const SET_COUNTRY_DATA = \"SET_COUNTRY_DATA\";\nexport const SET_COUNTRY = \"SET_COUNTRY\";\nexport const SET_DATA = \"SET_DATA\";\nexport const LOADING = \"LOADING\";\n","import React from \"react\";\nimport { Container } from \"./styled-components\";\n\nconst TotalCounter = (props) => {\n  return (\n    <div className=\"container-fluid padded \">\n      <Container className=\" padded\">\n        <Container className=\"row \">\n          <Container className=\"card total-card is-card-dark is-total-text\">\n            <font style={{ fontSize: \"18px\", color: \"#99aab5\" }}>\n              Confirmed\n            </font>\n            {props.data[0]}\n          </Container>\n        </Container>\n      </Container>\n      <Container className=\" padded\">\n        <Container className=\"row\">\n          <Container className=\"card total-card is-card-dark is-total-text\">\n            <font style={{ fontSize: \"18px\", color: \"#99aab5\" }}>Deaths</font>\n            {props.data[1]}\n          </Container>\n        </Container>\n      </Container>\n      <Container className=\" padded\">\n        <Container className=\"row \">\n          <Container className=\"card total-card is-card-dark is-total-text\">\n            <font style={{ fontSize: \"18px\", color: \"#99aab5\" }}>\n              Recovered\n            </font>\n            {props.data[2]}\n          </Container>\n        </Container>\n      </Container>\n    </div>\n  );\n};\n\nexport default TotalCounter;\n","import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport axios from \"axios\";\nimport colormap from \"colormap\";\nimport countryData from \"./countries\";\nimport Loading from \"./Loading\";\n\nconst countries = countryData[0];\nconst countriesFull = countryData[1];\n\nclass TimeGraph extends Component {\n  state = {\n    selector: \"confirmed\",\n    logarithmic: false,\n  };\n\n  capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  setupTicks = (arr, delta, date) => {\n    const l = arr.length;\n    delta = Math.floor(l / delta);\n    let newArr = [];\n    for (let i = 0; i < arr.length; i = i + delta) {\n      if (date) {\n        newArr.push(this.formatDate(arr[i]));\n      } else {\n        newArr.push(arr[i]);\n      }\n    }\n    return newArr;\n  };\n\n  handleOnClick = (selected) => {\n    this.setState({ selector: selected });\n  };\n  handleSwitch = () => {\n    this.setState({ logarithmic: !this.state.logarithmic });\n  };\n\n  render() {\n    const selectors = [\"confirmed\", \"deaths\", \"recovered\"];\n\n    const buttons = selectors.map((selector) => (\n      <button\n        className={\n          this.state.selector === selector\n            ? \"btn btn-outline-dark clicked\"\n            : \"btn btn-outline-dark\"\n        }\n        style={{ padding: \"0vh 5.5vh 0vh 5.5vh\" }}\n        onClick={() => this.handleOnClick(selector)}\n      >\n        {selector}\n      </button>\n    ));\n\n    const data = this.props.data;\n    let plotDataY = [[[]], [[]], [[]]],\n      plotDataX = [];\n    for (let iso in data) {\n      let countryObj = data[iso];\n      var confirmedArr = [],\n        deathsArr = [],\n        recoveredArr = [],\n        timeArr = [],\n        counter = 0,\n        dateArr = [];\n      for (let date in countryObj) {\n        var confirmed = countryObj[date].confirmed;\n        var deaths = countryObj[date].deaths;\n        var recovered = countryObj[date].recovered;\n        confirmedArr.push(confirmed);\n        deathsArr.push(deaths);\n        recoveredArr.push(recovered);\n        timeArr.push(counter);\n        dateArr.push(date);\n        counter++;\n      }\n      plotDataX.push(timeArr);\n      plotDataY[0].push(confirmedArr);\n      plotDataY[1].push(deathsArr);\n      plotDataY[2].push(recoveredArr);\n    }\n\n    let scatterData = [];\n    let select =\n      this.state.selector === \"confirmed\"\n        ? 0\n        : this.state.selector === \"deaths\"\n        ? 1\n        : this.state.selector === \"recovered\"\n        ? 2\n        : 3;\n\n    for (let i = 1; i < plotDataX.length + 1; i++) {\n      var trace = {\n        x: dateArr,\n        y: plotDataY[select][i],\n        type: \"scatter\",\n        name: countriesFull[i - 1],\n      };\n      scatterData.push(trace);\n    }\n\n    let logType = this.state.logarithmic ? \"log\" : \"null\";\n    const colorway = colormap({\n      colormap: \"jet\",\n      nshades: countries.length,\n      format: \"hex\",\n      alpha: 1,\n    });\n\n    if (this.props.loading) {\n      return <Loading />;\n    }\n    return (\n      <div className=\" padded\">\n        {buttons}\n        <div className=\"btn toggler\">\n          <div class=\"custom-control custom-switch \">\n            <input\n              type=\"checkbox\"\n              class=\"custom-control-input\"\n              onClick={() => this.handleSwitch()}\n              id=\"switch\"\n            />\n\n            <label\n              class=\"custom-control-label\"\n              for=\"switch\"\n              style={{ color: \"#99aab5\" }}\n            >\n              logarithmic\n            </label>\n          </div>\n        </div>\n        <div>\n          <Plot\n            data={scatterData}\n            layout={{\n              modebar: { bgcolor: \"rgba(255,255,255,0)\" },\n              title: `Total ${this.capitalizeFirstLetter(this.state.selector)}`,\n              font: { color: \"#99aab5\", size: 12 },\n              xaxis: { nticks: 15 },\n              yaxis: { type: logType },\n              colorway: colorway,\n              plot_bgcolor: \"#191d20\",\n              paper_bgcolor: \"#191d20\",\n              autosize: true,\n              height: \"337\",\n              hovermode: \"closest\",\n              margin: { l: 40, r: 20, t: 0, b: 0, pad: 0 },\n              legend: {\n                font: { size: 10 },\n                bgcolor: \"transparent\",\n                xanchor: \"center\",\n                yanchor: \"top\",\n                y: -0.1,\n                x: 0.5,\n                autosize: true,\n                orientation: \"h\",\n              },\n            }}\n            config={{\n              modeBarButtonsToRemove: [\n                \"toggleSpikelines\",\n                \"zoomIn2d\",\n                \"zoomOut2d\",\n                \"autoScale2d\",\n                \"hoverClosestCartesian\",\n                \"hoverCompareCartesian\",\n              ],\n              displaylogo: false,\n            }}\n            useResizeHandler={true}\n            style={{ width: \"100%\", height: \"100%\" }}\n            modeBarButtonsToRemove={[\"toImage\"]}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TimeGraph;\n","import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport colormap from \"colormap\";\nimport countryData from \"./countries\";\nimport Loading from \"./Loading\";\n\nconst countries = countryData[1];\n\nclass PieChart extends Component {\n  state = {\n    selector: \"confirmed\",\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.loading !== this.props.loading) {\n      this.setState({ loading: !this.props.loading });\n    }\n  }\n\n  handleOnClick = (selected) => {\n    this.setState({ selector: selected });\n  };\n\n  render() {\n    const selectors = [\"confirmed\", \"deaths\", \"recovered\"];\n\n    const buttons = selectors.map((selector) => (\n      <button\n        className={\n          this.state.selector === selector\n            ? \"btn btn-outline-dark clicked\"\n            : \"btn btn-outline-dark\"\n        }\n        style={{ padding: \"0vh 3.37vh 0vh 3.37vh\" }}\n        onClick={() => this.handleOnClick(selector)}\n      >\n        {selector}\n      </button>\n    ));\n\n    const confirmedData = this.props.data[0];\n    const deathsData = this.props.data[1];\n    const recoveredData = this.props.data[2];\n\n    let confirmedX = [],\n      confirmedY = [];\n    confirmedData.map((country) => {\n      confirmedX.push(country.name);\n      confirmedY.push(country.confirmed);\n    });\n\n    let deathsX = [],\n      deathsY = [];\n    deathsData.map((country) => {\n      deathsX.push(country.name);\n      deathsY.push(country.deaths);\n    });\n\n    let recoveredX = [],\n      recoveredY = [];\n    recoveredData.map((country) => {\n      recoveredX.push(country.name);\n      recoveredY.push(country.recovered);\n    });\n\n    const colorway = colormap({\n      colormap: \"jet\",\n      nshades: countries.length,\n      format: \"hex\",\n      alpha: 1,\n    });\n\n    let data = null;\n    if (this.state.selector === \"confirmed\") {\n      data = [\n        {\n          values: confirmedY,\n          labels: confirmedX,\n          type: \"pie\",\n          textinfo: \"label\",\n          rotation: \"-20\",\n        },\n      ];\n    } else if (this.state.selector === \"deaths\") {\n      data = [\n        {\n          values: deathsY,\n          labels: deathsX,\n          type: \"pie\",\n          textinfo: \"label\",\n          rotation: \"-20\",\n        },\n      ];\n    } else {\n      data = [\n        {\n          values: recoveredY,\n          labels: recoveredX,\n          type: \"pie\",\n          textinfo: \"label\",\n          rotation: \"-20\",\n        },\n      ];\n    }\n\n    if (this.props.loading && data) {\n      return <Loading />;\n    }\n    return (\n      <div className=\"padded\">\n        <div style={{ padding: \"0.25rem 0.0rem 0.5rem 0.0rem\" }}>\n          {\" \"}\n          {buttons}\n        </div>\n\n        <div>\n          <Plot\n            data={data}\n            layout={{\n              modebar: { bgcolor: \"rgba(255,255,255,0)\" },\n              font: { color: \"#99aab5\", size: 11 },\n              showlegend: false,\n              colorway: colorway.reverse(),\n              plot_bgcolor: \"#191d20\",\n              paper_bgcolor: \"#191d20\",\n              height: \"337\",\n              autosize: true,\n              margin: { l: 10, r: 10, t: 5, b: 5, pad: 0 },\n            }}\n            config={{\n              modeBarButtonsToRemove: [\n                \"toggleSpikelines\",\n                \"zoomIn2d\",\n                \"zoomOut2d\",\n                \"autoScale2d\",\n                \"hoverClosestCartesian\",\n                \"hoverCompareCartesian\",\n                \"hoverClosestPie\",\n              ],\n              displaylogo: false,\n            }}\n            useResizeHandler={true}\n            style={{ width: \"100%\", height: \"100%\" }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PieChart;\n","import React, { useState } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport countryData from \"./countries\";\nimport Loading from \"./Loading\";\nimport { connect } from \"react-redux\";\nimport { setCountry } from \"../redux/actions\";\n\nconst reverseDict = countryData[5];\n\nconst MapChart = (props) => {\n  const handleClick = (pointData) => {\n    let data = pointData.points[0];\n    let index = data.pointIndex;\n    let location = pointData.points[0].data.locations[index];\n    props.setCountry(location);\n  };\n\n  let confirmedList = [],\n    countryNames = [];\n  props.data.map((country) => {\n    confirmedList.push(country.confirmed);\n    countryNames.push(reverseDict[country.name]);\n  });\n\n  let scaledData = confirmedList.map((num) =>\n    props.region ? Math.pow(num, 0.3) : num / 50\n  );\n  let data = [\n    {\n      type: \"scattergeo\",\n      mode: \"markers\",\n      locations: countryNames,\n      hoverinfo: \"text, label\",\n      text: confirmedList,\n      marker: {\n        size: scaledData,\n        color: \"rgba(255,0,0,0.75)\",\n        sizeref: 1,\n        line: {\n          color: \"black\",\n        },\n      },\n      name: \"europe data\",\n    },\n  ];\n  if (props.loading) {\n    return <Loading />;\n  }\n  return (\n    <div>\n      <Plot\n        data={data}\n        layout={\n          props.region\n            ? {\n                modebar: { bgcolor: \"rgba(255,255,255,0)\" },\n                geo: {\n                  scope: \"World\",\n                  resolution: \"200\",\n                  showland: true,\n                  landcolor: \"#0f1316\",\n                  showframe: true,\n                  bgcolor: \"#0f1316\",\n                  showcountries: true,\n                  showocean: true,\n                  oceancolor: \"#030217\",\n                },\n                height: \"420\",\n                border: \"solid\",\n                margin: { l: 0, r: 0, t: 0, b: 0, pad: 0 },\n                plot_bgcolor: \"rgba(0,0,0,0)\",\n                paper_bgcolor: \"rgba(0,0,0,0)\",\n                autosize: true,\n              }\n            : {\n                modebar: { bgcolor: \"rgba(255,255,255,0)\" },\n                geo: {\n                  scope: \"World\",\n                  resolution: \"200\",\n                  showland: true,\n                  landcolor: \"#0f1316\",\n                  showframe: true,\n                  bgcolor: \"#0f1316\",\n                  showcountries: true,\n                  showocean: true,\n                  oceancolor: \"#030217\",\n                  lonaxis: { range: [-19, 61] },\n                  lataxis: { range: [7, 47] },\n                },\n                height: \"420\",\n                border: \"solid\",\n                margin: { l: 0, r: 0, t: 0, b: 0, pad: 0 },\n                plot_bgcolor: \"rgba(0,0,0,0)\",\n                paper_bgcolor: \"rgba(0,0,0,0)\",\n                autosize: true,\n              }\n        }\n        useResizeHandler={true}\n        style={{ width: \"100%\", height: \"100%\" }}\n        onClick={(data) => handleClick(data)}\n        config={\n          {\n            modeBarButtonsToRemove: [\n              \"toggleSpikelines\",\n              \"autoScale2d\",\n              \"hoverClosestCartesian\",\n              \"hoverCompareCartesian\",\n              \"select2d\",\n              \"lasso2d\",\n              \"hoverClosestGeo\",\n              \"zoomInGeo\",\n              \"zoomOutGeo\",\n            ],\n            displaylogo: false,\n          } // onClick={(data) => handleShow(data)}\n        }\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCountry: (country) => dispatch(setCountry(country)),\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(MapChart);\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport countryData from \"./countries\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { compose } from \"redux\";\n\nconst dictionary = countryData[4];\n\nconst instance = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/\",\n  loading: true,\n});\n\nconst CountryInfo = ({ country, global }) => {\n  const [data, setData] = useState(global);\n  const [loading, setLoading] = useState(true);\n  const [X, setX] = useState([]);\n  const [Y1, setY1] = useState([]);\n  const [Y2, setY2] = useState([]);\n  const [Y3, setY3] = useState([]);\n  const [Y4, setY4] = useState([]);\n  const [logarithmic, setLogarithmic] = useState(false);\n  const [selector, setSelector] = useState(\"confirmed\");\n\n  const handleSwitch = () => {\n    setLogarithmic(!logarithmic);\n  };\n\n  const handleOnClick = (selected) => {\n    setSelector(selected);\n  };\n\n  const fetchData = async (country) => {\n    try {\n      let response = await instance.get(`country/${country}`);\n      let countryData = response.data.result;\n      setData(countryData);\n      console.log(data[\"2020-03-22\"]);\n      setLoading(true);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(\n    () => {\n      fetchData(country);\n    },\n    [country]\n  );\n\n  let logType = logarithmic ? \"log\" : \"null\";\n\n  if (data && loading) {\n    var Xtemp = [];\n    var Y1temp = [],\n      Y2temp = [],\n      Y3temp = [],\n      Y4temp = [];\n    for (var key in data) {\n      Xtemp.push(key);\n      Y1temp.push(data[key].confirmed);\n      Y2temp.push(data[key].deaths);\n      Y3temp.push(data[key].recovered);\n    }\n    if (Xtemp.length > 1) {\n      setX(Xtemp);\n      setY1(Y1temp);\n      setY2(Y2temp);\n      setY3(Y3temp);\n      for (let i = 0; i < Xtemp.length; i++) {\n        Y4temp.push(Y1temp[i + 1] - Y1temp[i]);\n      }\n      setY4(Y4temp);\n      setLoading(false);\n    }\n  }\n\n  if (!loading) {\n    const trace1 = {\n      x: X,\n      y: Y1,\n      type: \"scatter\",\n      name: \"Confirmed\",\n      mode: \"lines+markers\",\n      line: { color: \"#ff0000\" },\n      marker: { color: \"#ff0000\" },\n    };\n    const trace2 = {\n      x: X,\n      y: Y2,\n      type: \"scatter\",\n      name: \"Deaths\",\n      mode: \"lines+markers\",\n      line: { color: \"#ff0000\" },\n      marker: { color: \"#ff0000\" },\n    };\n    const trace3 = {\n      x: X,\n      y: Y3,\n      type: \"scatter\",\n      name: \"Recovered\",\n      mode: \"lines+markers\",\n      line: { color: \"#ff0000\" },\n      marker: { color: \"#ff0000\" },\n    };\n    const bar = {\n      x: X,\n      y: Y4,\n      type: \"bar\",\n      name: \"New Cases\",\n      line: { color: \"#ff0000\" },\n      marker: { color: \"#ff0000\" },\n    };\n    const plotData = [trace1, trace2, trace3, bar];\n\n    const selectors = [\"confirmed\", \"deaths\", \"recovered\", \"daily increase\"];\n\n    const buttons = selectors.map((type) => (\n      <button\n        className={\n          selector === type\n            ? \"btn btn-outline-dark clicked\"\n            : \"btn btn-outline-dark\"\n        }\n        style={{ padding: \"0vh 5vh 0vh 5vh\" }}\n        onClick={() => handleOnClick(type)}\n      >\n        {type}\n      </button>\n    ));\n    let select =\n      selector === \"confirmed\"\n        ? 0\n        : selector === \"deaths\"\n        ? 1\n        : selector === \"recovered\"\n        ? 2\n        : selector === \"daily increase\"\n        ? 3\n        : null;\n    return (\n      <div className=\"padded\">\n        {buttons}\n        <div className=\"btn toggler\">\n          <div class=\"custom-control custom-switch \">\n            <input\n              type=\"checkbox\"\n              class=\"custom-control-input\"\n              onClick={() => handleSwitch()}\n              id=\"country-info-switch\"\n            />\n\n            <label\n              class=\"custom-control-label\"\n              for=\"country-info-switch\"\n              style={{ color: \"#99aab5\" }}\n            >\n              logarithmic\n            </label>\n          </div>\n        </div>\n        <div>\n          <Plot\n            data={[plotData[select]]}\n            layout={{\n              modebar: { bgcolor: \"rgba(255,255,255,0)\" },\n              title: !country ? \"Global\" : `${dictionary[country]}`,\n              font: { color: \"#99aab5\", size: 12 },\n              xaxis: { nticks: 15 },\n              yaxis: { type: logType },\n              margin: { l: 40, r: 20, t: 50, b: 40, pad: 0 },\n              plot_bgcolor: \"#191d20\",\n              paper_bgcolor: \"#191d20\",\n              height: \"385\",\n              autosize: true,\n            }}\n            useResizeHandler={true}\n            style={{ width: \"100%\", height: \"100%\" }}\n            config={{\n              modeBarButtonsToRemove: [\n                \"toggleSpikelines\",\n                \"zoomIn2d\",\n                \"zoomOut2d\",\n                \"autoScale2d\",\n                \"hoverClosestCartesian\",\n                \"hoverCompareCartesian\",\n                \"select2d\",\n                \"lasso2d\",\n              ],\n              displaylogo: false,\n            }}\n          />\n        </div>\n      </div>\n    );\n  } else {\n    return <div>Click on a country from the map</div>;\n  }\n};\nconst mapStateToProps = (state) => {\n  return {\n    country: state.data.country,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CountryInfo);\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/\",\n  loading: true,\n});\n\nconst Footer = () => {\n  return (\n    <div\n      style={{\n        fontSize: 15,\n        textAlign: \"center\",\n        paddingTop: \"1rem\",\n\n        color: \"#99aab5\",\n      }}\n    >\n      Copyright ©{\" \"}\n      <a\n        style={{ fontSize: 15, textAlign: \"center\", color: \"#99aab5\" }}\n        href=\"https://github.com/moe9195\"\n      >\n        Mohammad Rahmeh\n      </a>{\" \"}\n      2020. Data obtained from{\" \"}\n      <a\n        style={{ fontSize: 15, textAlign: \"center\", color: \"#99aab5\" }}\n        href=\"https://github.com/backtrackbaba/covid-api\"\n      >\n        CovidAPI.info\n      </a>{\" \"}\n      , which builds upon the dataset of{\" \"}\n      <a\n        style={{ fontSize: 15, textAlign: \"center\", color: \"#99aab5\" }}\n        href=\"https://github.com/CSSEGISandData/COVID-19\"\n      >\n        John Hopkins University.\n      </a>\n      &nbsp;The CSV data was converted to JSON Time Series format by{\" \"}\n      <a\n        style={{ fontSize: 15, textAlign: \"center\", color: \"#99aab5\" }}\n        href=\"https://github.com/pomber/covid19\"\n      >\n        pomber.\n      </a>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/\",\n  loading: true,\n});\n\nconst LastUpdated = () => {\n  const [date, setDate] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const fetchDate = async () => {\n    try {\n      let response = await instance.get(`global`);\n      let fetchedData = response.data;\n      if (loading) {\n        setDate(fetchedData.date);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    fetchDate();\n  });\n\n  return (\n    <div>\n      <div style={{ opacity: \"0.5\", textAlign: \"center\", paddingLeft: \"1rem\" }}>\n        {\" \"}\n        Last Updated at (MM/DD/YYYY) <br />\n      </div>\n      <div style={{ fontSize: 20, textAlign: \"center\" }}>\n        {\" \"}\n        {loading ? \"\" : `${date}`}\n      </div>\n    </div>\n  );\n};\n\nexport default LastUpdated;\n","import React, { Component } from \"react\";\nimport { Container } from \"./styled-components\";\nimport countryData from \"./countries\";\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\n\nimport Counter from \"./Counter\";\nimport TotalCounter from \"./TotalCounter\";\nimport TimeGraph from \"./TimeGraph\";\nimport PieChart from \"./PieChart\";\nimport MapChart from \"./MapChart\";\nimport CountryInfo from \"./CountryInfo\";\nimport Footer from \"./Footer\";\nimport LastUpdated from \"./LastUpdated\";\n\nconst MENA = countryData[0];\nconst dictionary = countryData[4];\n\nconst instance = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/\",\n  loading: true,\n});\n\nclass App extends Component {\n  state = {\n    data: null,\n    dataCountries: null,\n    loading: true,\n    region: false,\n  };\n\n  fetchData = async (countries) => {\n    try {\n      let response1 = await instance.get(`global/latest`);\n      let data1 = response1.data;\n      let dict = {};\n      for (let i = 0; i < countries.length; i++) {\n        let response = await instance.get(`country/${countries[i]}`);\n        let countryData = response.data.result;\n        dict[countries[i]] = countryData;\n      }\n      let response2 = await instance.get(`/global/count`);\n      let data2 = response2.data;\n      this.setState({\n        dataCountries: data1,\n        timeData: dict,\n        global: data2,\n        loading: false,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  componentDidMount = async () => {\n    this.fetchData(MENA);\n  };\n\n  sortCountries = (items, region) => {\n    let cleanedConfirmed = [],\n      cleanedRecovered = [],\n      cleanedDeaths = [];\n    if (region) {\n      items.map((country) => {\n        let countryName = Object.keys(country)[0];\n        console.log(MENA);\n        if (MENA.indexOf(countryName) !== -1) {\n          let confirmedObj = {\n            name: dictionary[countryName],\n            confirmed: country[countryName].confirmed,\n          };\n          let recoveredObj = {\n            name: dictionary[countryName],\n            recovered: country[countryName].recovered,\n          };\n          let deathsObj = {\n            name: dictionary[countryName],\n            deaths: country[countryName].deaths,\n          };\n          cleanedConfirmed.push(confirmedObj);\n          cleanedRecovered.push(recoveredObj);\n          cleanedDeaths.push(deathsObj);\n        }\n      });\n    } else {\n      items.map((country) => {\n        let countryName = Object.keys(country)[0];\n        let confirmedObj = {\n          name: dictionary[countryName],\n          confirmed: country[countryName].confirmed,\n        };\n        let recoveredObj = {\n          name: dictionary[countryName],\n          recovered: country[countryName].recovered,\n        };\n        let deathsObj = {\n          name: dictionary[countryName],\n          deaths: country[countryName].deaths,\n        };\n        cleanedConfirmed.push(confirmedObj);\n        cleanedRecovered.push(recoveredObj);\n        cleanedDeaths.push(deathsObj);\n      });\n    }\n    const confirmed = cleanedConfirmed.sort(\n      (a, b) => b.confirmed - a.confirmed\n    );\n    const recovered = cleanedRecovered.sort(\n      (a, b) => b.recovered - a.recovered\n    );\n    const deaths = cleanedDeaths.sort((a, b) => b.deaths - a.deaths);\n    return [[confirmed], [deaths], [recovered]];\n  };\n\n  render() {\n    if (!this.state.loading) {\n      const sortedData = this.sortCountries(\n        this.state.dataCountries.result,\n        true\n      );\n\n      // Cases country\n      const confirmedData = sortedData[0][0];\n      const deathsData = sortedData[1][0];\n      const recoveredData = sortedData[2][0];\n\n      const sortedDataMENA = this.sortCountries(\n        this.state.dataCountries.result,\n        false\n      );\n\n      const confirmedDataMENA = sortedDataMENA[0][0];\n      const deathsDataMENA = sortedDataMENA[1][0];\n      const recoveredDataMENA = sortedDataMENA[2][0];\n\n      // Total Cases/Deaths/Recovered\n\n      let totalConfirmedMENA = 0,\n        totalDeathsMENA = 0,\n        totalRecoveredMENA = 0;\n      confirmedDataMENA.map(\n        (country) => (totalConfirmedMENA += country.confirmed)\n      );\n      deathsDataMENA.map((country) => (totalDeathsMENA += country.deaths));\n      recoveredDataMENA.map(\n        (country) => (totalRecoveredMENA += country.recovered)\n      );\n\n      let totalConfirmed = 0,\n        totalDeaths = 0,\n        totalRecovered = 0;\n      confirmedData.map((country) => (totalConfirmed += country.confirmed));\n      deathsData.map((country) => (totalDeaths += country.deaths));\n      recoveredData.map((country) => (totalRecovered += country.recovered));\n\n      return (\n        <Container>\n          <div className=\"sticky-top change-region\">\n            <div class=\"custom-control custom-switch\">\n              <input\n                type=\"checkbox\"\n                class=\"custom-control-input\"\n                onClick={() => this.setState({ region: !this.state.region })}\n                id=\"regionswitch\"\n              />{\" \"}\n              <text>\n                {this.state.region ? \"switch to local\" : \"switch to global\"}\n              </text>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              <label class=\"custom-control-label\" for=\"regionswitch\" />\n            </div>\n          </div>\n          {/* content area start */}\n          <Container className=\"container-fluid pr-1 pl-1 pt-1 pb-1\">\n            {/* row 1  */}\n            <Container className=\"row\">\n              {/* counter list  */}\n              <Container className=\"col-lg-2 col-sm-6 is-light-text mb-3 small-padding\">\n                <Container className=\"card grid-card is-card-dark\">\n                  <TotalCounter\n                    data={\n                      this.state.region\n                        ? [\n                            totalConfirmedMENA,\n                            totalDeathsMENA,\n                            totalRecoveredMENA,\n                          ]\n                        : [totalConfirmed, totalDeaths, totalRecovered]\n                    }\n                  />\n                </Container>\n              </Container>\n              {/* counter  */}\n              <Container className=\"col-lg-2 col-sm-6 is-light-text mb-3 small-padding\">\n                <Container className=\"card grid-card is-card-dark\">\n                  <Counter\n                    data={\n                      this.state.region\n                        ? [confirmedDataMENA, deathsDataMENA, recoveredDataMENA]\n                        : [confirmedData, deathsData, recoveredData]\n                    }\n                    loading={this.state.loading}\n                  />\n                </Container>\n              </Container>\n\n              {/* timegraph  */}\n              <Container className=\"col-lg-5 col-sm-6 is-light-text mb-3 small-padding\">\n                <Container className=\"card grid-card is-card-dark\">\n                  <TimeGraph\n                    data={this.state.timeData}\n                    loading={this.state.loading}\n                  />\n                </Container>\n              </Container>\n              {/* pie chart  */}\n              <Container className=\"col-lg-3 col-sm-6 is-light-text mb-3 small-padding\">\n                <Container className=\"card grid-card is-card-dark\">\n                  <PieChart\n                    data={[confirmedData, deathsData, recoveredData]}\n                    loading={this.state.loading}\n                  />\n                </Container>\n              </Container>\n            </Container>\n\n            {/* row 2  */}\n\n            <Container className=\"row\">\n              <Container className=\"col-md-4 col-lg-6 is-light-text mb-3 small-padding \">\n                <Container className=\"card is-card-dark map-card\">\n                  <MapChart\n                    data={this.state.region ? confirmedDataMENA : confirmedData}\n                    loading={this.state.loading}\n                    region={this.state.region}\n                  />\n                </Container>\n              </Container>\n\n              <Container className=\"col-lg-6 col-sm-6 is-light-text mb-3 small-padding\">\n                <Container className=\"card grid-card is-card-dark\">\n                  <CountryInfo global={this.state.global.result} />\n                </Container>\n              </Container>\n            </Container>\n\n            {/* footer */}\n            <Container className=\"row\">\n              <Container className=\"col-md-4 col-lg-2 is-light-text mb-3 small-padding\">\n                <Container className=\"card footer-card is-card-dark\">\n                  <LastUpdated />\n                </Container>\n              </Container>\n\n              <Container className=\"col-md-4 col-lg-10 is-light-text mb-3 small-padding\">\n                <Container className=\"card is-card-dark footer-card\">\n                  <Footer />\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n        </Container>\n      );\n    } else {\n      return (\n        <div>\n          {\" \"}\n          <Loading />\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SET_DATA, LOADING, SET_COUNTRY } from \"../actions/actionTypes\";\n\nconst initialState = { countryData: null, loading: true, country: null };\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      return {\n        ...state,\n        data: action.payload,\n      };\n    case LOADING:\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    case SET_COUNTRY:\n      return {\n        ...state,\n        country: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport reducer from \"./data\";\n\nconst rootReducer = combineReducers({\n  data: reducer,\n});\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\n// Data actions\n\nimport rootReducer from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"react-dropdown/style.css\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}