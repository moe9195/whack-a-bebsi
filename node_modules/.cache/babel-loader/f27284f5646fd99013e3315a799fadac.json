{"ast":null,"code":"var _jsxFileName = \"/home/moe/Development/whack-a-bebsi/src/Timer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { timer } from \"./redux/actions\";\n\nclass Timer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.timerID = setInterval(() => this.tick(), 1000);\n    };\n\n    this.componentWillUnmount = () => clearInterval(this.timerID);\n\n    this.tick = () => {\n      this.props.timer(this.props.time - 1);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"font\", {\n      size: \"7\",\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, \" \", \"\\xA0\\xA0\\xA0Time: \", this.props.time));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    timer: time => dispatch(timer(time))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    time: state.board.time\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);","map":{"version":3,"sources":["/home/moe/Development/whack-a-bebsi/src/Timer.js"],"names":["React","Component","connect","timer","Timer","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","props","time","render","mapDispatchToProps","dispatch","mapStateToProps","state","board"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,iBAAtB;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAC5BI,iBAD4B,GACR,MAAM;AACxB,WAAKC,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAKC,IAAL,EAAP,EAAoB,IAApB,CAA1B;AACD,KAH2B;;AAAA,SAK5BC,oBAL4B,GAKL,MAAMC,aAAa,CAAC,KAAKJ,OAAN,CALd;;AAAA,SAO5BE,IAP4B,GAOrB,MAAM;AACX,WAAKG,KAAL,CAAWR,KAAX,CAAiB,KAAKQ,KAAL,CAAWC,IAAX,GAAkB,CAAnC;AACD,KAT2B;AAAA;;AAW5BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,IAAI,EAAC,GAAX;AAAe,MAAA,KAAK,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,wBAE2B,KAAKF,KAAL,CAAWC,IAFtC,CADF,CADF;AAQD;;AApB2B;;AAuB9B,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLZ,IAAAA,KAAK,EAAES,IAAI,IAAIG,QAAQ,CAACZ,KAAK,CAACS,IAAD,CAAN;AADlB,GAAP;AAGD,CAJD;;AAMA,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLL,IAAAA,IAAI,EAAEK,KAAK,CAACC,KAAN,CAAYN;AADb,GAAP;AAGD,CAJD;;AAMA,eAAeV,OAAO,CAACc,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CV,KAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { timer } from \"./redux/actions\";\n\nclass Timer extends Component {\n  componentDidMount = () => {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  };\n\n  componentWillUnmount = () => clearInterval(this.timerID);\n\n  tick = () => {\n    this.props.timer(this.props.time - 1);\n  };\n\n  render() {\n    return (\n      <div>\n        <font size=\"7\" color=\"white\">\n          {\" \"}\n          &nbsp;&nbsp;&nbsp;Time: {this.props.time}\n        </font>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    timer: time => dispatch(timer(time))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    time: state.board.time\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n"]},"metadata":{},"sourceType":"module"}