{"ast":null,"code":"var _jsxFileName = \"/home/moe/Development/whack-a-bebsi/src/Hole.js\";\nimport React, { Component } from \"react\";\nimport { getScore } from \"./redux/actions\";\nimport { connect } from \"react-redux\";\nexport class Hole extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      up: false,\n      counter: 0,\n      clicked: true\n    };\n\n    this.peep = () => {\n      if (this.state.counter < 2) {\n        this.setState({\n          up: !this.state.up,\n          counter: this.state.counter + 1\n        });\n      } else {\n        this.setState({\n          counter: 0,\n          clicked: true\n        });\n      }\n    };\n\n    this.whack = () => {\n      if (this.state.clicked) {\n        let audio = new Audio(\"https://raw.githubusercontent.com/Nerobeats/guac-a-mole/master/src/assets/ahh-male-loud.mp3\");\n        audio.volume = 1;\n        audio.play();\n        this.props.getScore(1);\n        this.setState({\n          clicked: false\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(this.peep, 3000 * this.props.speed);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const mole = /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://raw.githubusercontent.com/Nerobeats/guac-a-mole/master/src/assets/bebsi-nobg.png\",\n      alt: \"mole\",\n      className: this.state.up && this.state.clicked ? \"mole-pic-up\" : !this.state.up && this.state.clicked ? \"mole-pic-down\" : this.state.up && !this.state.clicked ? \"mole-pic-up animated wobble\" : !this.state.up && !this.state.clicked ? \"mole-pic-down animated wobble\" : null,\n      onClick: this.whack,\n      style: {\n        transition: `bottom ${this.props.speed}s ease`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, this.props.show ? mole : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://raw.githubusercontent.com/Nerobeats/guac-a-mole/master/src/assets/cropped_ice.png\",\n      alt: \"mound\",\n      className: \"mound-pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mask\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    score: state.board.score,\n    speed: state.board.speed,\n    size: state.board.size\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getScore: score => dispatch(getScore(score))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Hole);","map":{"version":3,"sources":["/home/moe/Development/whack-a-bebsi/src/Hole.js"],"names":["React","Component","getScore","connect","Hole","state","up","counter","clicked","peep","setState","whack","audio","Audio","volume","play","props","componentDidMount","interval","setInterval","speed","componentWillUnmount","clearInterval","render","mole","transition","show","mapStateToProps","score","board","size","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getScore } from \"./redux/actions\";\nimport { connect } from \"react-redux\";\n\nexport class Hole extends Component {\n  state = {\n    up: false,\n    counter: 0,\n    clicked: true\n  };\n\n  peep = () => {\n    if (this.state.counter < 2) {\n      this.setState({\n        up: !this.state.up,\n        counter: this.state.counter + 1\n      });\n    } else {\n      this.setState({ counter: 0, clicked: true });\n    }\n  };\n\n  componentDidMount() {\n    this.interval = setInterval(this.peep, 3000 * this.props.speed);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  whack = () => {\n    if (this.state.clicked) {\n      let audio = new Audio(\n        \"https://raw.githubusercontent.com/Nerobeats/guac-a-mole/master/src/assets/ahh-male-loud.mp3\"\n      );\n      audio.volume = 1;\n      audio.play();\n      this.props.getScore(1);\n      this.setState({\n        clicked: false\n      });\n    }\n  };\n\n  render() {\n    const mole = (\n      <img\n        src=\"https://raw.githubusercontent.com/Nerobeats/guac-a-mole/master/src/assets/bebsi-nobg.png\"\n        alt=\"mole\"\n        className={\n          this.state.up && this.state.clicked\n            ? \"mole-pic-up\"\n            : !this.state.up && this.state.clicked\n            ? \"mole-pic-down\"\n            : this.state.up && !this.state.clicked\n            ? \"mole-pic-up animated wobble\"\n            : !this.state.up && !this.state.clicked\n            ? \"mole-pic-down animated wobble\"\n            : null\n        }\n        onClick={this.whack}\n        style={{ transition: `bottom ${this.props.speed}s ease` }}\n      />\n    );\n    return (\n      <div className=\"box\">\n        {this.props.show ? mole : <></>}\n        <img\n          src=\"https://raw.githubusercontent.com/Nerobeats/guac-a-mole/master/src/assets/cropped_ice.png\"\n          alt=\"mound\"\n          className=\"mound-pic\"\n        />\n        <div className=\"mask\"></div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    score: state.board.score,\n    speed: state.board.speed,\n    size: state.board.size\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getScore: score => dispatch(getScore(score))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Hole);\n"]},"metadata":{},"sourceType":"module"}